# This workflow will build and push a node.js application to an Azure Web App when there is a push to the main branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/azure/app-service/app-service-plan-manage#create-an-app-service-plan
#
# To configure this workflow:
#
# 1. For Linux apps, add an app setting called WEBSITE_WEBDEPLOY_USE_SCM and set it to true in your app **before downloading the file**.
#      For more instructions see: https://docs.microsoft.com/azure/app-service/configure-common#configure-app-settings
#
# 2. Set up a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE with the value of your Azure publish profile.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the values for the AZURE_WEBAPP_NAME, AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables  (below).
#
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main
  workflow_dispatch:
    inputs:
      project:
        description: 'Thing'
        required: true
        default: 'test'
      tags:
        description: 'Thing'

env:
  AZURE_WEBAPP_NAME: willryan-playground    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: 'test/build'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '10.x'                # set this to the node version to use
  RESOURCE_GROUP: 'Playground_WillRyan'
  SUBSCRIPTION: 'Playground Subscription'
  PR_NUMBER: ${{ github.event.number }}

jobs:
  openPullRequestJob:
    name: Build and Deploy to Slot
    if: (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    environment: production
    steps:
    
    - uses: actions/checkout@v2
        
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: npm install, build, and test
      run: |
        # Build and test the project, then
        # deploy to Azure Web App.
        cd test
        npm install
        npm run build --if-present
        npm run test --if-present

    - uses: papeloto/action-zip@v1
      with:
        files: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        dest: artifact.zip

    - uses: actions/upload-artifact@v1
      with:
        name: artifact
        path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create slot
      run: |
          az webapp deployment slot create --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --slot ${{ env.PR_NUMBER }} --subscription '${{ env.SUBSCRIPTION }}'

    - name: Deploy to slot
      run: |
          az webapp deployment source config-zip --resource-group ${{ env.RESOURCE_GROUP }} --name ${{ env.AZURE_WEBAPP_NAME }} --src artifact.zip --slot ${{ env.PR_NUMBER }}

  closePullRequestJob:
    name: Delete Slot
    if: (github.event_name == 'pull_request' && github.event.action == 'closed')
    runs-on: ubuntu-latest
    steps:
        
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Delete Slot
        run: |
          az webapp deployment slot delete --name ${{ env.AZURE_WEBAPP_NAME }} --resource-group ${{ env.RESOURCE_GROUP }} --slot ${{ env.PR_NUMBER }} --subscription '${{ env.SUBSCRIPTION }}'
